name: "Servian TechChallenge"
on:
  push:
    paths:
    - '.github/workflows/**'
    - 'terraform/**'
    - docker-compose.yml
    - Makefile
    branches:
      - main
  pull_request:
    paths:
    - '.github/workflows/**'
    - 'terraform/**'
    - docker-compose.yml
    - Makefile
    branches:
      - main   
env:
  TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
  TF_BACKEND_KEY: ${{ secrets.TF_BACKEND_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ap-southeast-2
  UPDATE_DB: false
  DESTROY: true
  RUN_PIPELINE: true


jobs:
  infra_plan:
    name: "TF Plan Infra"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: ${{ env.RUN_PIPELINE == 'true' }}
        uses: actions/checkout@v2

      - name: Terraform Plan Infra
        if: ${{ env.RUN_PIPELINE == 'true' }}
        run: make plan_infra

      - name: Upload plan artifact
        if: ${{ env.RUN_PIPELINE == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: infra plan
          path: terraform/infra.plan
          retention-days: 5

  infra_apply:
    name: "TF Apply infra"
    runs-on: ubuntu-latest
    needs: infra_plan
    steps:
      - name: Checkout
        if: ${{ env.RUN_PIPELINE == 'true' }}
        uses: actions/checkout@v2

      - name: Download plan artifact
        if: ${{ env.RUN_PIPELINE == 'true' }}
        uses: actions/download-artifact@v2
        with:
          name: infra plan
          path: terraform
      
      - name: Terraform Apply Infra
        if: ${{ env.RUN_PIPELINE == 'true' }}
        run: make apply_infra

  prep_db:
    name: Preparing Database
    runs-on: ubuntu-latest
    needs: infra_apply
    steps:
      - name: Checkout
        if: ${{ env.UPDATE_DB == 'true' && env.RUN_PIPELINE == 'true' }}
        uses: actions/checkout@v2

      - name: Terraform Prep DB
        if: ${{ env.UPDATE_DB == 'true' && env.RUN_PIPELINE == 'true' }}
        run: make prep_db

  serve:
    name: "Serving APP"
    runs-on: ubuntu-latest
    needs: prep_db
    steps:
      - name: Checkout
        if: ${{ env.RUN_PIPELINE == 'true' }}
        uses: actions/checkout@v2
      
      - name: Terraform Apply Infra
        if: ${{ env.RUN_PIPELINE == 'true' }}
        run: make serve

      - name: Load Balancer Public Address
        if: ${{ env.RUN_PIPELINE == 'true' }}
        run: make dnsname

  destroy:
    name: "Destroy Infra"
    runs-on: ubuntu-latest
    needs: serve
    steps:
      - name: Checkout
        if: ${{ env.DESTROY == 'true' && env.RUN_PIPELINE == 'true' }}
        uses: actions/checkout@v2
      
      - name: Terraform Destroy Infra
        if: ${{ env.DESTROY == 'true' && env.RUN_PIPELINE == 'true' }}
        run: make destroy

  update_vars:
    name: "Update Variables"
    runs-on: ubuntu-latest
    needs: destroy
    steps:
      - name: Checkout
        if: ${{ env.RUN_PIPELINE == 'true' }}
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: "Update variables"
        if: ${{ env.RUN_PIPELINE == 'true' }}
        run: |
          sed -i "19,27 s/UPDATE_DB: true/UPDATE_DB: false/" .github/workflows/main.yml
          sed -i "19,27 s/DESTROY: true/DESTROY: false/" .github/workflows/main.yml
          sed -i "19,27 s/RUN_PIPELINE: true/RUN_PIPELINE: false/" .github/workflows/main.yml
          git config --local user.email "$(git log --format='%ae' HEAD^!)"
          git config --local user.name "$(git log --format='%an' HEAD^!)"
          git add .
          git commit -m "Variables change"
          git push
